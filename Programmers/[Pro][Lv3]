# 너무 떡코딩이다........
import collections

def solution(n, edge):
    answer = 0
    # 전처리....
    for i in range(len(edge)):
        if edge[i][0]>edge[i][1]:
            edge[i][0],edge[i][1] = edge[i][1],edge[i][0]
    INF = 987654
    node_cnt = [0,0] + [INF] * (n-1)
    vistied = [0]*(n+1)
    graph = collections.defaultdict(list)
    for start, end in edge:
        graph[start].append(end)

    def dfs(now, dist):
        for arriv in graph[now]:
            if vistied[arriv] == 0:
                vistied[arriv] = 1
                node_cnt[arriv] = min(node_cnt[arriv], dist)
                dfs(arriv, dist + 1)
                vistied[arriv] = 0

    dfs(1,1)

    # 1번 노드에서 출발해서 아예 갈 수 없는 노드가 존재하는가? -> 일단 없다고 코드 짜봄
    maxdist = 0
    for nodedist in node_cnt:
        if nodedist != INF:
            maxdist = max(maxdist,nodedist)
    for nodedist in node_cnt:
        if (maxdist == nodedist):
            answer += 1

    return answer